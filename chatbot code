
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>MRU EduBot - Azure-Powered Educational Assistant</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <style>
        :root {
            --primary-color: #3f51b5;
            --secondary-color: #2e7d32;
            --accent-color: #ffab00;
            --dark-color: #263238;
            --light-color: #f5f5f5;
            --bot-bubble: #e3f2fd;
            --user-bubble: #3f51b5;
            --azure-gradient: linear-gradient(135deg, #0078d4 0%, #004578 100%);
            --header-gradient: linear-gradient(135deg, var(--primary-color), #303f9f);
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #e4edf5 100%);
            color: var(--dark-color);
            min-height: 100vh;
            padding: 20px;
            position: relative;
            overflow-x: hidden;
        }
        
        .background-pattern {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: 
                radial-gradient(circle at 10% 20%, rgba(63, 81, 181, 0.05) 0%, transparent 20%),
                radial-gradient(circle at 90% 80%, rgba(46, 125, 50, 0.05) 0%, transparent 20%);
            z-index: -1;
        }
        
        .floating-elements {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            overflow: hidden;
        }
        
        .floating-elements i {
            position: absolute;
            color: rgba(63, 81, 181, 0.15);
            font-size: 2.5rem;
            animation: float 15s infinite linear;
            opacity: 0;
            transform: translateY(0) rotate(0deg);
            text-shadow: 0 0 10px rgba(255, 255, 255, 0.7);
        }
        
        @keyframes float {
            0% { transform: translateY(100vh) rotate(0deg); opacity: 0; }
            10% { opacity: 1; }
            90% { opacity: 1; }
            100% { transform: translateY(-100px) rotate(360deg); opacity: 0; }
        }
        
        .title-container {
            text-align: center;
            margin-bottom: 30px;
            padding: 25px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 20px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.15);
            max-width: 850px;
            margin: 25px auto 35px;
            backdrop-filter: blur(5px);
            border: 1px solid rgba(255, 255, 255, 0.5);
            position: relative;
            overflow: hidden;
            transition: all 0.5s ease;
        }
        
        .title-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(45deg, 
                rgba(63, 81, 181, 0.03) 0%, 
                rgba(255, 255, 255, 0) 50%,
                rgba(46, 125, 50, 0.03) 100%);
            z-index: -1;
        }
        
        .title-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.2);
        }
        
        .title {
            color: var(--primary-color);
            font-weight: 700;
            margin: 0;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
            font-size: 2.2rem;
            text-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .title i {
            font-size: 2rem;
            color: var(--accent-color);
            animation: pulse 2s infinite;
        }
        
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }
        
        .subtitle {
            color: #555;
            font-weight: 400;
            margin-top: 15px;
            font-size: 1.2rem;
        }
        
        .azure-badge {
            background: var(--azure-gradient);
            color: white;
            padding: 6px 20px;
            border-radius: 25px;
            font-size: 0.9rem;
            display: inline-block;
            margin-top: 15px;
            box-shadow: 0 4px 15px rgba(0,0,0,0.15);
            transition: all 0.3s ease;
            animation: badgeFloat 4s infinite ease-in-out;
        }
        
        @keyframes badgeFloat {
            0% { transform: translateY(0); }
            50% { transform: translateY(-5px); }
            100% { transform: translateY(0); }
        }
        
        .azure-badge:hover {
            transform: translateY(-3px);
            box-shadow: 0 6px 20px rgba(0,0,0,0.2);
        }
        
        .container-wrapper {
            max-width: 1300px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 20px;
            box-shadow: 0 15px 40px rgba(0,0,0,0.15);
            overflow: hidden;
            backdrop-filter: blur(5px);
            border: 1px solid rgba(255, 255, 255, 0.5);
            transition: all 0.5s ease;
        }
        
        .container-wrapper:hover {
            box-shadow: 0 20px 50px rgba(0,0,0,0.2);
        }
        
        .chat-container {
            height: 65vh;
            display: flex;
            flex-direction: column;
            position: relative;
            overflow: hidden;
        }
        
        .chat-header {
            padding: 18px 25px;
            background: var(--header-gradient);
            color: white;
            display: flex;
            align-items: center;
            gap: 15px;
            position: relative;
            overflow: hidden;
        }
        
        .chat-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, 
                transparent 0%, 
                rgba(255, 255, 255, 0.2) 50%,
                transparent 100%);
            animation: headerShine 3s infinite;
        }
        
        @keyframes headerShine {
            0% { transform: translateX(-100%); }
            100% { transform: translateX(100%); }
        }
        
        .chat-logo {
            width: 50px;
            height: 50px;
            object-fit: contain;
            filter: drop-shadow(0 0 5px rgba(255, 255, 255, 0.7));
            transition: transform 0.3s ease;
        }
        
        .chat-logo:hover {
            transform: rotate(15deg) scale(1.1);
        }
        
        .chat-header-text h3 {
            margin: 0;
            font-size: 1.4rem;
            text-shadow: 0 1px 3px rgba(0,0,0,0.2);
        }
        
        .status {
            margin: 0;
            font-size: 0.9rem;
            opacity: 0.9;
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        .status-indicator {
            width: 10px;
            height: 10px;
            border-radius: 50%;
            display: inline-block;
            animation: pulse 1.5s infinite;
        }
        
        .status-indicator.online {
            background-color: #4caf50;
            box-shadow: 0 0 12px #4caf50;
        }
        
        .chat-messages {
            flex: 1;
            padding: 25px;
            overflow-y: auto;
            background: linear-gradient(to bottom, #f0f5ff, #e6f0ff);
            scroll-behavior: smooth;
            display: flex;
            flex-direction: column;
            gap: 20px;
        }
        
        .message {
            max-width: 85%;
            padding: 15px 20px;
            border-radius: 18px;
            position: relative;
            box-shadow: 0 4px 12px rgba(0,0,0,0.08);
            transition: transform 0.3s ease;
            animation: slideIn 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
            opacity: 0;
            transform: translateY(20px);
        }
        
        @keyframes slideIn {
            to { opacity: 1; transform: translateY(0); }
        }
        
        .message:hover {
            transform: translateY(-3px);
        }
        
        .message-content {
            line-height: 1.6;
            font-size: 1.05rem;
        }
        
        .message-header {
            display: flex;
            justify-content: space-between;
            margin-bottom: 10px;
            font-size: 0.85rem;
            color: var(--dark-color);
            align-items: center;
        }
        
        .sender-name {
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
        }
        
        .sender-name i {
            font-size: 0.9rem;
        }
        
        .message-time {
            opacity: 0.7;
            font-size: 0.8rem;
        }
        
        .message-source {
            font-size: 0.7rem;
            padding: 3px 8px;
            margin-left: 8px;
            background: rgba(0,0,0,0.1);
            border-radius: 12px;
            transition: all 0.3s ease;
        }
        
        .message-source:hover {
            background: rgba(0,0,0,0.2);
            transform: scale(1.05);
        }
        
        .bot-message {
            background-color: var(--bot-bubble);
            border-top-left-radius: 5px;
            align-self: flex-start;
            border-left: 4px solid var(--primary-color);
        }
        
        .user-message {
            background-color: var(--user-bubble);
            color: white;
            border-top-right-radius: 5px;
            margin-left: auto;
            align-self: flex-end;
            border-right: 4px solid var(--accent-color);
        }
        
        .user-message .message-header {
            color: rgba(255,255,255,0.9);
        }
        
        .typing-indicator {
            display: inline-flex;
            padding: 12px 15px;
            background-color: var(--bot-bubble);
            border-radius: 18px;
            align-self: flex-start;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        
        .typing-dots {
            display: flex;
            gap: 6px;
        }
        
        .typing-dots span {
            width: 10px;
            height: 10px;
            background-color: var(--dark-color);
            border-radius: 50%;
            display: inline-block;
            animation: bounce 1.4s infinite ease-in-out both;
        }
        
        .typing-dots span:nth-child(1) { animation-delay: -0.32s; }
        .typing-dots span:nth-child(2) { animation-delay: -0.16s; }
        
        @keyframes bounce {
            0%, 80%, 100% { transform: scale(0.6); }
            40% { transform: scale(1); }
        }
        
        .input-container {
            padding: 18px;
            background-color: white;
            border-top: 1px solid rgba(0,0,0,0.08);
            position: relative;
        }
        
        .input-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 3px;
            background: linear-gradient(90deg, var(--primary-color), var(--secondary-color), var(--accent-color));
            animation: inputShine 8s infinite linear;
        }
        
        @keyframes inputShine {
            0% { background-position: -1000px 0; }
            100% { background-position: 1000px 0; }
        }
        
        .input-group {
            border-radius: 30px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            border: 1px solid rgba(0,0,0,0.1);
        }
        
        .input-group:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.15);
        }
        
        .input-container input {
            border: none;
            padding: 14px 25px;
            font-size: 1rem;
            background: rgba(255, 255, 255, 0.9);
            transition: all 0.3s ease;
        }
        
        .input-container input:focus {
            box-shadow: none;
            outline: none;
            background: white;
        }
        
        .input-container button {
            border: none;
            padding: 0 25px;
            background: var(--azure-gradient);
            color: white;
            transition: all 0.3s ease;
            font-size: 1.1rem;
        }
        
        .input-container button:hover {
            background: linear-gradient(135deg, #0062ad 0%, #003966 100%);
            transform: scale(1.05);
        }
        
        .input-container button:active {
            transform: scale(0.95);
        }
        
        .faq-sidebar {
            height: 65vh;
            background: rgba(255, 255, 255, 0.85);
            padding: 25px;
            display: flex;
            flex-direction: column;
            overflow: hidden;
            border-left: 1px solid rgba(0,0,0,0.08);
            backdrop-filter: blur(5px);
        }
        
        .sidebar-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid rgba(0,0,0,0.1);
        }
        
        .sidebar-header h3 {
            margin: 0;
            font-size: 1.3rem;
            display: flex;
            align-items: center;
            gap: 10px;
            color: var(--primary-color);
        }
        
        .refresh-btn {
            background: rgba(63, 81, 181, 0.1);
            border: none;
            color: var(--primary-color);
            cursor: pointer;
            transition: all 0.5s ease;
            width: 36px;
            height: 36px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        
        .refresh-btn:hover {
            background-color: rgba(63, 81, 181, 0.2);
            transform: rotate(360deg);
        }
        
        .faq-list {
            flex: 1;
            overflow-y: auto;
            display: flex;
            flex-direction: column;
            gap: 15px;
        }
        
        .faq-item {
            padding: 15px;
            background: linear-gradient(to right, rgba(227, 242, 253, 0.7), rgba(255, 255, 255, 0.9));
            border-radius: 12px;
            cursor: pointer;
            transition: all 0.3s ease;
            border-left: 4px solid transparent;
            font-size: 0.95rem;
            box-shadow: 0 3px 10px rgba(0,0,0,0.05);
            position: relative;
            overflow: hidden;
        }
        
        .faq-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.5), transparent);
            transform: translateX(-100%);
        }
        
        .faq-item:hover::before {
            animation: faqShine 0.8s forwards;
        }
        
        @keyframes faqShine {
            to { transform: translateX(100%); }
        }
        
        .faq-item:hover {
            background: linear-gradient(to right, rgba(227, 242, 253, 0.9), white);
            border-left: 4px solid var(--primary-color);
            transform: translateY(-3px) translateX(5px);
            box-shadow: 0 6px 15px rgba(0,0,0,0.1);
        }
        
        .faq-item i {
            margin-right: 10px;
            color: var(--primary-color);
            transition: all 0.3s ease;
        }
        
        .faq-item:hover i {
            transform: rotate(10deg) scale(1.2);
            color: var(--secondary-color);
        }
        
        .powered-by {
            text-align: center;
            margin-top: 20px;
            padding: 15px;
            font-size: 0.9rem;
            color: #555;
            background: rgba(0,0,0,0.03);
            border-radius: 12px;
            transition: all 0.3s ease;
        }
        
        .powered-by:hover {
            background: rgba(0,0,0,0.05);
            transform: translateY(-3px);
        }
        
        .powered-by img {
            height: 28px;
            vertical-align: middle;
            margin-left: 8px;
            transition: all 0.3s ease;
        }
        
        .powered-by:hover img {
            transform: scale(1.1);
        }
        
        @media (max-width: 768px) {
            .chat-container, .faq-sidebar {
                height: 50vh;
            }
            
            .message {
                max-width: 90%;
            }
            
            .title {
                font-size: 1.8rem;
            }
        }
        
        /* New animations */
        @keyframes floatUp {
            0% { opacity: 0; transform: translateY(20px); }
            100% { opacity: 1; transform: translateY(0); }
        }
        
        .animate-float-up {
            animation: floatUp 0.6s forwards;
        }
        
        .bounce-in {
            animation: bounceIn 0.5s forwards;
        }
        
        @keyframes bounceIn {
            0% { opacity: 0; transform: scale(0.5); }
            70% { transform: scale(1.1); }
            100% { opacity: 1; transform: scale(1); }
        }
        
        .fade-in {
            animation: fadeIn 0.8s forwards;
        }
        
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        /* Wave animation for background */
        .wave {
            position: absolute;
            bottom: 0;
            left: 0;
            width: 100%;
            height: 100px;
            background: url('https://www.transparenttextures.com/patterns/asfalt-light.png');
            opacity: 0.1;
            animation: waveAnimation 15s linear infinite;
        }
        
        @keyframes waveAnimation {
            0% { transform: translateX(0); }
            100% { transform: translateX(-1000px); }
        }
    </style>
</head>
<body>
    <div class="background-pattern"></div>
    <div class="floating-elements">
        <i class="fas fa-book"></i>
        <i class="fas fa-graduation-cap"></i>
        <i class="fas fa-university"></i>
        <i class="fas fa-robot"></i>
        <i class="fas fa-cloud"></i>
        <i class="fas fa-lightbulb"></i>
        <i class="fas fa-chalkboard-teacher"></i>
        <i class="fas fa-laptop-code"></i>
    </div>
    
    <div class="wave"></div>
    
    <div class="title-container animate__animated animate__fadeInDown">
        <h1 class="title">
            <i class="fas fa-robot"></i> MRU EduBot - AI-Powered Educational Assistant
        </h1>
        <p class="subtitle">Get instant answers about admissions, courses, fees, and more</p>
        <div class="azure-badge">Powered by Microsoft Azure Cognitive Services</div>
    </div>
    
    <div class="container-wrapper">
        <div class="row g-0">
            <div class="col-md-8">
                <div class="chat-container">
                    <div class="chat-header">
                        <img src="https://cdn-icons-png.flaticon.com/512/4712/4712035.png" class="chat-logo" alt="Chatbot">
                        <div class="chat-header-text">
                            <h3>MRU Educational Assistant</h3>
                            <p class="status"><span class="status-indicator online"></span> Connected to Azure AI Services</p>
                        </div>
                    </div>
                    
                    <div class="chat-messages" id="chatMessages">
                        <div class="message bot-message">
                            <div class="message-content">
                                <div class="message-header">
                                    <span class="sender-name"><i class="fas fa-robot"></i> MRU EduBot</span>
                                    <span class="message-time">Just now</span>
                                </div>
                                Welcome to Manav Rachna University's AI Educational Assistant! 🎓<br><br>
                                I can help you with information about admissions, courses, fees, scholarships, and more. 
                                How can I assist you today?
                            </div>
                        </div>
                    </div>
                    
                    <div class="input-container">
                        <div class="input-group">
                            <input type="text" id="userInput" class="form-control" 
                                   placeholder="Ask about admissions, courses, fees..." 
                                   aria-label="Ask your question">
                            <button class="btn" onclick="handleUserInput()">
                                <i class="fas fa-paper-plane"></i>
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="faq-sidebar">
                    <div class="sidebar-header">
                        <h3><i class="fas fa-question-circle"></i> Popular Questions</h3>
                        <button class="refresh-btn" onclick="refreshPopularQuestions()">
                            <i class="fas fa-sync-alt"></i>
                        </button>
                    </div>
                    <div id="faqList" class="faq-list"></div>
                    <div class="powered-by">
                        Powered by Microsoft Azure <img src="https://upload.wikimedia.org/wikipedia/commons/f/fa/Microsoft_Azure.svg" alt="Azure">
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        // Azure QnA Service Configuration
        const azureQnAConfig = {
            endpoint: "https://languageservice111.cognitiveservices.azure.com",
            subscriptionKey: "2Jg78dJX6ckkTaO9rliiI8tiMx32aw6L6jOMgbhYU1YyCbfig2XNJQQJ99BDACYeBjFXJ3w3AAAaACOGUy40",
            projectName: "qnaproject",
            deploymentName: "production",
            apiVersion: "2021-10-01"
        };
        
        // Application State
        const APP_STATE = {
            isProcessing: false,
            speechRecognitionActive: false
        };
        
        // DOM Elements
        const DOM = {
            chatMessages: document.getElementById('chatMessages'),
            userInput: document.getElementById('userInput'),
            faqList: document.getElementById('faqList')
        };
        
        // Initialize the application
        function init() {
            setupEventListeners();
            loadPopularQuestions();
            setupFloatingElements();
            
            // Add a welcome animation effect
            setTimeout(() => {
                document.querySelector('.title-container').classList.add('bounce-in');
            }, 300);
        }
        
        // Set up floating elements animation
        function setupFloatingElements() {
            const container = document.querySelector('.floating-elements');
            const icons = container.querySelectorAll('i');
            
            icons.forEach((icon, index) => {
                // Random position
                const left = Math.floor(Math.random() * 90);
                const top = Math.floor(Math.random() * 90);
                
                // Random delay
                const delay = Math.floor(Math.random() * 12);
                
                // Set positions
                icon.style.left = `${left}%`;
                icon.style.top = `${top}%`;
                icon.style.animationDelay = `${delay}s`;
                icon.style.fontSize = `${Math.random() * 1.5 + 1.8}rem`;
            });
        }
        
        // Load popular questions
        function loadPopularQuestions() {
            const popularQuestions = [
                "What are the admission requirements for 2025?",
                "What is the fee structure for B.Tech programs?",
                "How do I apply for scholarships?",
                "What courses are offered at MRU?",
                "What is the campus placement record?",
                "How do I contact the admissions office?",
                "What are the important dates for 2025 admissions?",
                "Does MRU offer hostel facilities?",
                "What are the research opportunities?",
                "How do I apply for international programs?"
            ];
            
            renderPopularQuestions(popularQuestions);
        }
        
        // Render popular questions
        function renderPopularQuestions(questions) {
            DOM.faqList.innerHTML = '';
            
            questions.forEach((question, index) => {
                setTimeout(() => {
                    const questionDiv = document.createElement('div');
                    questionDiv.className = 'faq-item animate-float-up';
                    questionDiv.style.animationDelay = `${index * 0.1}s`;
                    questionDiv.innerHTML = `
                        <i class="fas fa-question"></i>
                        ${question}
                    `;
                    
                    questionDiv.addEventListener('click', () => {
                        // Add question to chat as user message
                        addMessageToChat(question, 'user');
                        
                        // Process the question
                        processQuestion(question);
                    });
                    
                    DOM.faqList.appendChild(questionDiv);
                }, 100);
            });
        }
        
        // Refresh popular questions
        function refreshPopularQuestions() {
            // Animation for refresh
            const faqItems = document.querySelectorAll('.faq-item');
            faqItems.forEach((item, index) => {
                item.style.animation = 'fadeOut 0.3s forwards';
            });
            
            setTimeout(() => {
                loadPopularQuestions();
            }, 300);
        }
        
        // Handle user input
        function handleUserInput() {
            if (APP_STATE.isProcessing) return;
            
            const question = DOM.userInput.value.trim();
            if (!question) return;
            
            // Add user message to chat
            addMessageToChat(question, 'user');
            DOM.userInput.value = '';
            
            // Process the question
            processQuestion(question);
        }
        
        // Process question through Azure QnA
        async function processQuestion(question) {
            // Show typing indicator
            showTypingIndicator();
            APP_STATE.isProcessing = true;
            
            try {
                // Simulate API call with delay
                await new Promise(resolve => setTimeout(resolve, 1200));
                
                // Get response from Azure QnA Maker
                const qnaResponse = await queryAzureQnA(question);
                
                if (qnaResponse.answers && qnaResponse.answers.length > 0) {
                    const bestAnswer = qnaResponse.answers[0];
                    
                    // Check if we need to supplement with website link
                    if (shouldSupplementWithLink(question)) {
                        const link = getWebsiteLinkForTopic(question);
                        const supplementedAnswer = `${bestAnswer.answer}<br><br>For the most current information, visit: <a href="${link}" target="_blank" style="color: var(--primary-color); font-weight: 500; text-decoration: none; border-bottom: 1px dashed var(--primary-color);">${link}</a>`;
                        
                        addMessageToChat(supplementedAnswer, 'bot', "Azure QnA + MRU Website");
                    } else {
                        addMessageToChat(bestAnswer.answer, 'bot', "Azure QnA");
                    }
                } else {
                    // If no answer from QnA, provide website link
                    handleCustomQuestion(question);
                }
            } catch (error) {
                console.error("Error processing question:", error);
                addMessageToChat("I'm having trouble connecting to our knowledge base. Please try again later.", 'bot');
            } finally {
                hideTypingIndicator();
                APP_STATE.isProcessing = false;
            }
        }
        
        // Query Azure QnA Maker
        async function queryAzureQnA(question) {
            // For demo purposes, we'll simulate responses
            return new Promise((resolve) => {
                setTimeout(() => {
                    // Simulated responses based on keywords
                    const responses = {
                        "admission": {
                            answers: [{
                                answer: "Manav Rachna University offers admissions for various undergraduate and postgraduate programs. The admission process typically involves submitting an application form, qualifying exam scores, and attending a counseling session. Key dates for 2025 admissions will be announced in October 2024."
                            }]
                        },
                        "fee": {
                            answers: [{
                                answer: "The fee structure varies by program. For B.Tech programs, the annual tuition fee is approximately ₹1,85,000. For MBA programs, the fee is around ₹1,60,000 per year. Additional fees may apply for hostel, library, and other facilities."
                            }]
                        },
                        "scholarship": {
                            answers: [{
                                answer: "MRU offers various scholarships based on academic merit, sports achievements, and financial need. The Merit Scholarship offers up to 100% tuition fee waiver for top performers. Applications for scholarships are accepted along with the admission application."
                            }]
                        },
                        "course": {
                            answers: [{
                                answer: "Manav Rachna University offers a wide range of programs including B.Tech in Computer Science, Mechanical, Electronics; BBA, B.Com, B.Sc; MBA, M.Tech, M.Sc; and PhD programs in various disciplines."
                            }]
                        },
                        "default": {
                            answers: [{
                                answer: "Thank you for your question! Manav Rachna University is committed to providing quality education with state-of-the-art facilities. Our campus features modern classrooms, advanced labs, a comprehensive library, sports facilities, and comfortable hostels."
                            }]
                        }
                    };
                    
                    // Determine response based on keywords
                    let response;
                    if (question.toLowerCase().includes("admission")) {
                        response = responses.admission;
                    } else if (question.toLowerCase().includes("fee")) {
                        response = responses.fee;
                    } else if (question.toLowerCase().includes("scholarship")) {
                        response = responses.scholarship;
                    } else if (question.toLowerCase().includes("course") || question.toLowerCase().includes("program")) {
                        response = responses.course;
                    } else {
                        response = responses.default;
                    }
                    
                    resolve(response);
                }, 800);
            });
        }
        
        // Handle custom questions by providing website links
        function handleCustomQuestion(question) {
            const link = getWebsiteLinkForTopic(question);
            
            if (link) {
                const answer = `For the most current information about "${getTopicName(question)}", please visit our official website:<br><br>
                               <a href="${link}" target="_blank" class="btn btn-sm" style="background: var(--azure-gradient); color: white; border-radius: 20px;">
                                   <i class="fas fa-external-link-alt"></i> Visit ${getTopicName(question)} Page
                               </a><br><br>
                               I'll be happy to help with any specific questions after you've reviewed the information there.`;
                
                addMessageToChat(answer, 'bot', "MRU Website");
            } else {
                addMessageToChat("I couldn't find specific information for your query. Please try rephrasing or ask about another topic.", 'bot');
            }
        }
        
        // Determine if we should supplement with website link
        function shouldSupplementWithLink(question) {
            const topics = ["admission", "fee", "scholarship", "course", "program", "curriculum"];
            return topics.some(topic => question.toLowerCase().includes(topic));
        }
        
        // Get website link for topic
        function getWebsiteLinkForTopic(question) {
            if (question.toLowerCase().includes("admission")) {
                return "https://manavrachna.edu.in/mru/admissions/";
            } else if (question.toLowerCase().includes("fee")) {
                return "https://manavrachna.edu.in/mru/admissions/fee-structure/";
            } else if (question.toLowerCase().includes("scholarship")) {
                return "https://manavrachna.edu.in/mru/admissions/scholarships/";
            } else if (question.toLowerCase().includes("course") || question.toLowerCase().includes("program")) {
                return "https://manavrachna.edu.in/mru/academics/programs/";
            }
            return "https://manavrachna.edu.in/";
        }
        
        // Get topic name for display
        function getTopicName(question) {
            if (question.toLowerCase().includes("admission")) return "Admissions";
            if (question.toLowerCase().includes("fee")) return "Fee Structure";
            if (question.toLowerCase().includes("scholarship")) return "Scholarships";
            if (question.toLowerCase().includes("course") || question.toLowerCase().includes("program")) return "Academic Programs";
            return "General Information";
        }
        
        // Add message to chat UI
        function addMessageToChat(content, sender, source = null) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${sender}-message`;
            
            // Format timestamp
            const now = new Date();
            const displayTime = `${now.getHours()}:${now.getMinutes().toString().padStart(2, '0')}`;
            
            // Build message HTML
            messageDiv.innerHTML = `
                <div class="message-content">
                    <div class="message-header">
                        <span class="sender-name">${sender === 'bot' ? '<i class="fas fa-robot"></i> MRU EduBot' : 'You'}</span>
                        <span class="message-time">${displayTime}</span>
                        ${source ? `<span class="message-source">${source}</span>` : ''}
                    </div>
                    ${content}
                </div>
            `;
            
            // Add to chat
            DOM.chatMessages.appendChild(messageDiv);
            DOM.chatMessages.scrollTop = DOM.chatMessages.scrollHeight;
            
            // Add animation class
            setTimeout(() => {
                messageDiv.style.animation = 'slideIn 0.4s forwards';
            }, 10);
        }
        
        // Show typing indicator
        function showTypingIndicator() {
            const typingDiv = document.createElement('div');
            typingDiv.className = 'typing-indicator';
            typingDiv.id = 'typingIndicator';
            typingDiv.innerHTML = `
                <div class="typing-dots">
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
            `;
            
            DOM.chatMessages.appendChild(typingDiv);
            DOM.chatMessages.scrollTop = DOM.chatMessages.scrollHeight;
            
            // Add animation
            setTimeout(() => {
                typingDiv.style.opacity = '1';
            }, 10);
        }
        
        // Hide typing indicator
        function hideTypingIndicator() {
            const indicator = document.getElementById('typingIndicator');
            if (indicator) {
                indicator.style.opacity = '0';
                setTimeout(() => {
                    if (indicator.parentNode) {
                        indicator.parentNode.removeChild(indicator);
                    }
                }, 300);
            }
        }
        
        // Set up event listeners
        function setupEventListeners() {
            // Send message on Enter key
            DOM.userInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    handleUserInput();
                }
            });
            
            // Focus input on load
            DOM.userInput.focus();
            
            // Add hover effect to title container
            const titleContainer = document.querySelector('.title-container');
            titleContainer.addEventListener('mouseenter', () => {
                titleContainer.style.transform = 'translateY(-5px)';
            });
            titleContainer.addEventListener('mouseleave', () => {
                titleContainer.style.transform = 'translateY(0)';
            });
        }
        
        // Initialize when DOM is loaded
        document.addEventListener('DOMContentLoaded', init);
    </script>
</body>
</html>
